let getUser,getSingleUser,createUser,editUser;_d08‍.x([["getAllUserController",()=>getAllUserController],["getSingleUserController",()=>getSingleUserController],["createUserController",()=>createUserController],["editUserController",()=>editUserController],["deleteUserController",()=>deleteUserController]]);_d08‍.w("../services/userServices",[["getUser",["getUser"],function(v){getUser=v}],["getSingleUser",["getSingleUser"],function(v){getSingleUser=v}],["createUser",["createUser"],function(v){createUser=v}],["editUser",["editUser"],function(v){editUser=v}]]);






       const getAllUserController = async (req, res, next) => {
  const users = await getUser();
  res.send(users);
};

       const getSingleUserController = async (req, res, next) => {
  const user = await getSingleUser(req.params.id);
  res.send(user);
};

       const createUserController = async (req, res, next) => {
  try {
    const user = await createUser(req.body);
    res.status(200).send(user);
  } catch (error) {
    res.status(500).send(error.message);
    _d08‍.g.console.log(error);
  }
};

       const editUserController = async (req, res, next) => {
  try {
    const updatedUser = await editUser(req.params.id, req.body);
    res.send(updatedUser);
  } catch (error) {
    res.send(error.message);
  }
};

       const deleteUserController = (req, res, next) => {
  res.send("deleteUserController  users");
};
